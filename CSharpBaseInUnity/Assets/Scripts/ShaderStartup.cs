using System.Collections;
using System.Collections.Generic;
using UnityEngine;


//---------------------------------
// 10. 디지털 라이트 이론
//---------------------------------

/*
    * 컴퓨터그래픽에서 처리하는 라이트의 종류나 특성
    1. 디렉셔널 라이트
        - 시작점, 끝점도 없고 방향만존재
        - 라이팅 계산에서 가장 가벼움
    2. 포인트 라이트
        - 무거움
        - 사방으로 뻗어나가는게 특징
    3. 스팟라이트
        - 특정부분만 강조

    * 디지털 라이트의 원리
        - 면과 빛의 방향이 반대일때 가장 밝으며, 수직일때 가장 어둡다
    
    * 노멀벡터는 사실 버텍스가 가지고 있음
    * 노멀벡터가 면에 있으면 부드러운 라이팅을 구현 할 수 없다.. 그래서 요즘은 노멀벡터가 버텍스에 있다.
    * 하지만, 노멀벡터가 1개만 존재할 경우 각진 도형을 표현하기는 힘듬.. 그래서 현대게임엔진에는
      각진형태를 표현하려면 한 버텍스에 노멀이 3개 혹은 4개 있어야한다.

    * 벡터의 곱셈
        - 내적, 외적이 있음
        - 벡터의 내적 : 두 백더의 각도차이를 숫자로 표현한 것
        - 두 벡터의 각도로 라이트의 양을 정할 수 있음.
        - cos0 일때 가장 밝으며, cos90일때 가장 어두움
        
    * Ambient Light : 간접광
       - 빛이 닿지않는 영역이라도 아에 검정색으로 보이지 않음. >> 간접적인 영향을 받기 때문에
       - 간접적인 영향에 의한 빛
    
    * 커스텀으로 라이트를 구현 할 때 함수명에 'Lighting' 을 붙어야한다. 파라미터는 정해저 있음
    * attenuation : 감쇄
        - 거리가 멀어지면서 점점 조명이 흐려지는 라이트의 현상
    
    * 'saturate'를 사용하면 안의 값을 0~1 사이즈로 잘라준다.
*/

public class ShaderStartup : MonoBehaviour
{
    // Start is called before the first frame update
    void Start()
    {
        
    }

    // Update is called once per frame
    void Update()
    {
        
    }
}
